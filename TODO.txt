
# C Parser and C converter - Stage 0
  
    - [./] Support integer declaration. "int a = 0;"
    - [./] Support multiple integer declaration. "int a = 0, b = 1;"
    - [./] Support function definition. "int main() { return 0; }
    - [./] Suppprt function parameters. "int main(int a, int b) { return 0;}"
    - [./] Support forward function declaration. "int main(int a);
    - [./] Support other type char parameter.
    - [./] Support pointer parameters.
    - [./] Support array parameters.
    
# C Parser and C converter - Stage 1

    - [] Handle basic macro?
        - [./] Object-like macro.
        - [./] Strays '\' between tokens.
        - [./] Strays '\' for identifiers.
        - [] Strays '\' for other multiple-char token.
        - [] Function-like macro.
        - [] String concatenation.
        - [] Special macro like __COUNT__, __LINE__, __FILE__ etc.
    - [] Support pointer declaration.
    - [] Support array declaration.
    - [] Handle typedef.
    - [] Handle struct.

# Type check

    - Implement some type check with int8/int16/etc before introducing structure and enum?